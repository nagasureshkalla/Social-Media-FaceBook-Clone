# Generated by Django 4.0.4 on 2022-06-12 15:05

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=124)),
                ('state', models.CharField(default='', max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='Clinic',
            fields=[
                ('clinicId', models.AutoField(primary_key=True, serialize=False)),
                ('clinicName', models.CharField(default='', max_length=200)),
                ('country', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('specialization', models.CharField(max_length=255)),
                ('rating', models.FloatField(default=0.0, max_length=5)),
                ('availability', models.CharField(default='24/7', max_length=100)),
                ('clinicImage', models.ImageField(blank=True, upload_to='clinicprofiles')),
                ('createdDate', models.DateTimeField(default=datetime.datetime(2022, 6, 12, 15, 5, 54, 94358), verbose_name='Clinic created At')),
                ('updatedDate', models.DateTimeField(default=datetime.datetime(2022, 6, 12, 15, 5, 54, 94366), verbose_name='Clinic Last Updated At')),
            ],
        ),
        migrations.CreateModel(
            name='Contributers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userId', models.CharField(default='', max_length=1000)),
                ('postId', models.CharField(default='', max_length=1000)),
                ('contributerId', models.CharField(default='', max_length=1000)),
                ('contributerName', models.CharField(default='', max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('couponId', models.AutoField(primary_key=True, serialize=False)),
                ('countofuses', models.IntegerField(default='0', max_length=100)),
                ('couponcode', models.CharField(default='', max_length=100)),
                ('couponamount', models.IntegerField(default='0', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Diseases',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=60, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('doctorId', models.AutoField(primary_key=True, serialize=False)),
                ('doctorName', models.CharField(default='0', max_length=100)),
                ('country', models.CharField(default='', max_length=100)),
                ('state', models.CharField(default='', max_length=100)),
                ('city', models.CharField(default='', max_length=100)),
                ('specialization', models.CharField(default='', max_length=100)),
                ('availabilityFrom', models.CharField(default='', max_length=100)),
                ('availabilityTo', models.CharField(default='', max_length=100)),
                ('doctorImage', models.ImageField(blank=True, upload_to='clinicprofiles')),
                ('createdDate', models.DateTimeField(default=datetime.datetime(2022, 6, 12, 15, 5, 54, 94855), verbose_name='Clinic created At')),
                ('updatedDate', models.DateTimeField(default=datetime.datetime(2022, 6, 12, 15, 5, 54, 94863), verbose_name='Clinic Last Updated At')),
                ('experience', models.FloatField(default=0.0, max_length=100)),
                ('rating', models.FloatField(default=0.0, max_length=10)),
                ('clinicId', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='app.clinic')),
            ],
        ),
        migrations.CreateModel(
            name='Followers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userId', models.CharField(default='', max_length=1000)),
                ('followerId', models.CharField(default='', max_length=1000)),
                ('followerName', models.CharField(default='', max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='InterestNames',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Interests',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=20)),
                ('userId', models.CharField(default='', max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='Likes',
            fields=[
                ('likeId', models.AutoField(primary_key=True, serialize=False)),
                ('postId', models.CharField(default='', max_length=1000)),
                ('action', models.CharField(default='', max_length=2000)),
                ('authorId', models.CharField(default='', max_length=2000)),
                ('ownerId', models.CharField(default='', max_length=2000)),
            ],
        ),
        migrations.CreateModel(
            name='MedicalHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.FileField(blank=True, upload_to='medicaluploads')),
                ('userId', models.CharField(default='', max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='Messages',
            fields=[
                ('messageId', models.AutoField(primary_key=True, serialize=False)),
                ('postId', models.CharField(default='', max_length=100)),
                ('chatMessage', models.CharField(default='', max_length=2000)),
                ('authorphotourl', models.CharField(default='', max_length=255)),
                ('authorname', models.CharField(default='', max_length=255)),
                ('authorId', models.CharField(default='', max_length=1000)),
                ('createdDate', models.DateTimeField(default=datetime.datetime(2022, 6, 12, 15, 5, 54, 90315), verbose_name='Chat Last created At')),
                ('updatedDate', models.DateTimeField(default=datetime.datetime(2022, 6, 12, 15, 5, 54, 90325), verbose_name='Chat Last updated At')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('postId', models.CharField(default='', max_length=100, primary_key=True, serialize=False, unique=True)),
                ('postMessage', models.CharField(default='', max_length=200)),
                ('urlsForUploads', models.CharField(max_length=255)),
                ('likes', models.IntegerField(default=0, max_length=1000000)),
                ('isActive', models.IntegerField(default=0)),
                ('dislikes', models.IntegerField(default=0, max_length=1000000)),
                ('authorphoto', models.CharField(default='', max_length=2000)),
                ('createdDate', models.DateTimeField(default=datetime.datetime(2022, 6, 12, 15, 5, 54, 88875), verbose_name='Post Last created At')),
                ('updatedDate', models.DateTimeField(default=datetime.datetime(2022, 6, 12, 15, 5, 54, 88887), verbose_name='Post Last Updated At')),
                ('reasonifrejected', models.CharField(default='', max_length=2000)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=40)),
                ('name', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('userId', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(default='', max_length=254, unique=True, validators=[django.core.validators.EmailValidator(message='Please enter Valid Email')])),
                ('username', models.CharField(default='', max_length=20, validators=[django.core.validators.MinValueValidator(limit_value=6, message='Username must be 6 to 20 characters')])),
                ('password', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(message='Password MustContain 1 Capital, 1 Number, 1 Special character and 8>=length<28', regex='^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!#%*?&]{8,18}$')])),
                ('createdDate', models.DateTimeField(default=datetime.datetime(2022, 6, 12, 15, 5, 54, 73846), verbose_name='User Created At')),
                ('updatedDate', models.DateTimeField(default=datetime.datetime(2022, 6, 12, 15, 5, 54, 73856), verbose_name='User Last Updated At')),
                ('token', models.CharField(default='', max_length=255)),
                ('isVerified', models.BooleanField(default=False)),
                ('lastlogin', models.DateTimeField(default=datetime.datetime(2022, 6, 12, 15, 5, 54, 73875), verbose_name='User Last LoggedIn At')),
                ('isProfileActive', models.BooleanField(default=False)),
                ('photo', models.CharField(default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='UserDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=60)),
                ('lastname', models.CharField(max_length=60)),
                ('dob', models.CharField(max_length=10)),
                ('gender', models.CharField(max_length=6)),
                ('mobile', models.CharField(max_length=16, unique=True, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{8,15}$')])),
                ('email', models.EmailField(default='', max_length=254, unique=True, validators=[django.core.validators.EmailValidator(message='Please enter Valid Email')])),
                ('photo', models.ImageField(blank=True, upload_to='usersprofiles')),
                ('country', models.CharField(default='', max_length=60)),
                ('state', models.CharField(default='', max_length=60)),
                ('city', models.CharField(default='', max_length=60)),
                ('union_council', models.CharField(default='', max_length=10)),
                ('address', models.CharField(default='', max_length=60)),
                ('postal_code', models.CharField(default='', max_length=10)),
                ('smoking', models.CharField(default='', max_length=10)),
                ('alchol', models.CharField(default='', max_length=10)),
                ('previous_existing_history_diabets', models.BooleanField(default=0)),
                ('Hipertension', models.BooleanField(default=0)),
                ('Arthritis', models.BooleanField(default=0)),
                ('Allergies', models.BooleanField(default=0)),
                ('Previous_Surgery', models.BooleanField(default=0)),
                ('Any_Medication', models.BooleanField(default=0)),
                ('BloodPressure', models.BooleanField(default=0)),
                ('Temparature', models.BooleanField(default=0)),
                ('HeratRate', models.BooleanField(default=0)),
                ('RespiratoryRate', models.BooleanField(default=0)),
                ('Weight', models.BooleanField(default=0)),
                ('Height', models.BooleanField(default=0)),
                ('interests', models.TextField(default='', max_length=1000)),
                ('userId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.user')),
            ],
        ),
        migrations.CreateModel(
            name='PostUploadDetails',
            fields=[
                ('uploadId', models.BigAutoField(primary_key=True, serialize=False)),
                ('url', models.ImageField(default='', max_length=255, upload_to='static/postimages')),
                ('createdDate', models.DateTimeField(default=datetime.datetime(2022, 6, 12, 15, 5, 54, 89349), verbose_name='Post Last created At')),
                ('updatedDate', models.DateTimeField(default=datetime.datetime(2022, 6, 12, 15, 5, 54, 89357), verbose_name='Post Last Updated At')),
                ('postId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.post')),
            ],
        ),
        migrations.AddField(
            model_name='post',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.user'),
        ),
        migrations.CreateModel(
            name='FamilyDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diseases', models.CharField(error_messages={'required': 'Please Select Disease'}, max_length=60)),
                ('family_person_name', models.CharField(error_messages={'required': 'Please Provide Member Name'}, max_length=60)),
                ('familyemail', models.EmailField(max_length=254)),
                ('userId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.user')),
            ],
        ),
        migrations.CreateModel(
            name='DoctorBooking',
            fields=[
                ('bookinguserId', models.CharField(default='', max_length=100)),
                ('doctorbookingid', models.AutoField(default='0', primary_key=True, serialize=False)),
                ('doctorName', models.CharField(default='', max_length=200)),
                ('specialization', models.CharField(max_length=255)),
                ('rating', models.FloatField(default=0.0, max_length=5)),
                ('slotTime', models.CharField(default='24/7', max_length=100)),
                ('dateofslot', models.DateField()),
                ('messageforanything', models.CharField(default='', max_length=200)),
                ('createdDate', models.DateTimeField(default=datetime.datetime(2022, 6, 12, 15, 5, 54, 95334), verbose_name='Slot created At')),
                ('updatedDate', models.DateTimeField(default=datetime.datetime(2022, 6, 12, 15, 5, 54, 95341), verbose_name='Slot Last Updated At')),
                ('paymentStatus', models.CharField(default='0', max_length=1)),
                ('coupunused', models.CharField(blank=True, default='', max_length=100)),
                ('amount', models.IntegerField(default=0)),
                ('doctorId', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='app.doctor')),
            ],
        ),
        migrations.CreateModel(
            name='Amount',
            fields=[
                ('amountId', models.AutoField(primary_key=True, serialize=False)),
                ('specilization', models.CharField(default='', max_length=200)),
                ('amount', models.IntegerField(default=0)),
                ('doctorId', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='app.doctor')),
            ],
        ),
    ]
